@page "/count"
@inject IJSRuntime JSRuntime

<h3>Change Button Color</h3>

<div>
    <button @onclick="ChangeColor" id="changeColorButton">Change Color</button>
</div>
<div>
    <button @onclick="ChangeColor1" id="changeColorButton1">Change Color</button>
</div>

@code {
    private string[] colors = { "red", "blue", "green", "yellow", "purple" };
    private int currentColorIndex = 0;

    // JavaScript function embedded in @code using JSRuntime
    private async Task ChangeColor()
    {
        var color = colors[currentColorIndex];

        // Define the JavaScript function inline using JSRuntime
        var script = $"var button = document.getElementById('changeColorButton'); " +
                     $"if (button) button.style.backgroundColor = '{color}';";

        // Invoke the JavaScript function
        await JSRuntime.InvokeVoidAsync("eval", script);

        // Increment the color index for the next click
        currentColorIndex = (currentColorIndex + 1) % colors.Length;
    }

    private async Task ChangeColor1()
    {
        var color = colors[currentColorIndex];

        // Inline JavaScript function definition
        var script = @"
            var button = document.getElementById('changeColorButton1');
            if (button) {
                button.style.backgroundColor = '" + color + @"';
            }
        ";

        // Invoke the inline JavaScript using JSRuntime
        await JSRuntime.InvokeVoidAsync("eval", script);

        // Increment the color index for the next click
        currentColorIndex = (currentColorIndex + 1) % colors.Length;
    }

}
