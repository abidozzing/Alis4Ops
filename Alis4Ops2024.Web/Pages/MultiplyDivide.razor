@page "/multiplydivide"
@using Alis4Ops2024.Web.Core
@using Alis4Ops2024.Web.Models
@using Alis4Ops2024.Web.Layout
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject NavigationManager _navigationManager
@using System
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
<link href="css/site.css" rel="stylesheet" />

<PageTitle>Add</PageTitle>

<div class="container col-12">

    @if (Num <= 0 || Num > 2)
    {
        <div>
            <Multiply AnsweredCorrectly="GenerateNewQuestion" AnsweredWrongly="HandleAnsweredWrongly" SelectedItem="Multiply-Missing" LowerRange="1" UpperRange="12" />
        </div>
    }
    else
    {
        <div>
            <Divide AnsweredCorrectly="GenerateNewQuestion" AnsweredWrongly="HandleAnsweredWrongly" SelectedItem="Divide-Missing" LowerRange="1" UpperRange="12" />
        </div>
    }

</div>

@code {

    private Random random = new Random();

    private int Num { get; set; } = 0;

    private DateTimeCounterStopWatch dateTimeCounterStopWatch; // Reference to child component

    [Parameter] public EventCallback AnsweredCorrectly { get; set; }
    [Parameter] public EventCallback AnsweredWrongly { get; set; }

    protected override void OnInitialized()
    {
        GenerateNewQuestion();
    }

    private async void HandleAnsweredCorrectly()
    {
        // dateTimeCounterStopWatch.ResetAndStartStopwatch();
        // await dateTimeCounterStopWatch.IncrementCounter();
        // await AnsweredCorrectly.InvokeAsync();
        GenerateNewQuestion();
    }

    private async void HandleAnsweredWrongly()
    {
        // await dateTimeCounterStopWatch.IncrementErrorCount();
        // await AnsweredWrongly.InvokeAsync();
    }

    private void GenerateNewQuestion()
    {
        Num = random.Next(0, 2);
    }

}






