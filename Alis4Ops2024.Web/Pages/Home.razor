@using Alis4Ops2024.Web.Core
@using Alis4Ops2024.Web.Models
@using Alis4Ops2024.Web.Layout
@using Alis4Ops2024.Web.Pages
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject NavigationManager _navigationManager
@using Microsoft.AspNetCore.Components

<!-- Index.razor -->
@page "/"
@page "/{operation}"

<h1>Main Page</h1>
<h2>Select Operation</h2>

@* Check if operation parameter is provided *@
@if (!string.IsNullOrEmpty(operation))
{
    

    <div>
        @* Use switch statement to handle different operations *@
        @switch (operation.ToLower())
        {
            case "add":
                <p>Addition Component</p>
                break;
            case "subtract":
                <p>Subtraction Component</p>
                break;
            case "multiply":
                <p>Multiplication Component</p>
                break;
            case "divide":
                <p>Division Component</p>
                break;
            case "addsubtract":
                <p>Subtraction Component</p>
                break;
            case "multiplydivide":
                <p>Multiplication Component</p>
                break;
            case "mixedfourops":
                <p>Division Component</p>
                break;
            default:
                <p>Invalid Operation: @operation</p>
                break;
        }
    </div>
}
else
{
    <!-- If no operation parameter is provided, default to "Add" -->
    @* <h2>Operation Selected: Add (Default)</h2> *@
    <div>
        @* <p>Addition Component (Default)</p> *@
    </div>
}

@code{
    [Parameter]
    public string operation { get; set; }
}