@page "/"
@page "/add"
@using Alis4Ops2024.Web.Core
@using Alis4Ops2024.Web.Models
@using Alis4Ops2024.Web.Layout
@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject NavigationManager _navigationManager
<link href="css/site.css" rel="stylesheet" />
<PageTitle>Add</PageTitle>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
@* <title>Your Page Title</title>
<style>
    html, body {
        width: 100vw;
        height: 100vw; /* 16:9 aspect ratio */
        max-width: 1000vh; /* Limit height to maintain aspect ratio */
        margin: 0;
        padding: 0;
        overflow: hidden;
    }

    .container {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: left;
        align-items: left;
        text-align: left;
    }

    .content {
        max-width: 100%; /* Adjust as needed */
        font-size: 2vw; /* Adjust font size relative to viewport width */
    }
</style> *@


<div class="container"> 
 
    <div class="row">
        <AddRangeMenu @bind-UpperRange=@UpperRange @bind-LowerRange=@LowerRange @bind-Operator=@Operator
                  @bind-SelectedItem=@SelectedItem ParametersChanged="HandleGenerateQuestion" />
    </div>

    <div class="row" style="font-size: 12px; ">
   Maths Sum:   @Question.Operand1 @Question.OperatorAsSymbol @Question.Operand2 = @Question.Answer
    </div>

    @* Use MathQuiz as Template for all new model/drawing/etc *@
    @*     <Model Question="@Question"></Model>
        <Drawing1 Question="@Question"></Drawing1>
        <Drawing2 Question="@Question"></Drawing2> *@
    <!-- Passing the Question object and its Answer property to the MathQuiz component -->
<p></p>
<p></p

    <div class="container">
        <MathQuiz Question="@Question" AnsweredCorrectly="HandleGenerateQuestion" Answer=@Question.Answer></MathQuiz>
        </div>
    </div>


@code {


    

    [Inject]
    private IQuestionGeneratorService QuestionGenerator { get; set; }
    [Parameter]
    public BaseQuestion Question { get; set; }



    private int _upperRange = 5;
    [Parameter]
    public int UpperRange
    {
        get { return _upperRange; }
        set { _upperRange = value; }
    }

    private int _lowerRange = 0;
    [Parameter]
    public int LowerRange
    {
        get { return _lowerRange; }
        set { _lowerRange = value; }
    }

    private string _operator = "Add";
    [Parameter]
    public string Operator
    {
        get { return _operator; }
        set { _operator = value; }
    }

    private string _selectedItem = "0-5";
    [Parameter]
    public string SelectedItem
    {
        get { return _selectedItem; }
        set { _selectedItem = value; }
    }

    protected override void OnInitialized()
    {
        HandleGenerateQuestion();
    }

    private void HandleGenerateQuestion()
    {
        if (Operator == null)
        {
            return;
        }
        Question = QuestionGenerator.GenerateQuestion(UpperRange, LowerRange, Operator, SelectedItem);
    }

    public void ReloadPage()
    {
        _navigationManager.NavigateTo($"Add", forceLoad: true);

    }
}


